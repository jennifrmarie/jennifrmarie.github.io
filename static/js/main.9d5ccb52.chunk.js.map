{"version":3,"sources":["Intro.js","NavBar.js","Contact.js","Projects.js","Resume.js","App.js","serviceWorker.js","index.js"],"names":["Intro","className","icon","transform","size","Component","NavBar","href","Contact","state","name","email","subject","message","sendEmail","e","preventDefault","templateParams","from_name","to_name","message_html","console","log","emailjs","send","then","response","status","text","error","resetForm","handleChange","param","setState","target","value","this","onSubmit","bind","type","onChange","Projects","alt","src","width","height","id","rel","Resume","App","path","component","exact","renderNavRoutes","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","library","add","fab","faEllipsisH","faChevronRight","faEnvelopeOpenText","faGreaterThan","faLessThan","faAngleLeft","faSlash","faAngleRight","faArrowLeft","faArrowRight","ReactDOM","render","basename","pathname","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d5ccb52.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Intro.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class Intro extends Component {\n    render() {\n        return (\n            <div className=\"intro__section\">\n                <div className=\"name__section\">\n                <h1 className=\"name__header\">Hi, I'm Jen{'  '}<FontAwesomeIcon icon='ellipsis-h'></FontAwesomeIcon></h1>\n                <h4>Full Stack Developer</h4>\n                </div>\n                \n                <div className=\"aboutme__section\">\n                <FontAwesomeIcon className=\"icon_left\" transform=\"\" transform=\"rotate-330 shrink-1 left-20 down-10\" icon=\"less-than\" size=\"6x\"></FontAwesomeIcon>\n                    <span className=\"aboutme\">\n                    I'm a recent graduate out of Atlanta, Georgia. \n                    I have a passion for the user experience and\n                    interface. I love to write code that connects\n                    the front to the back seamlessly.<br/><br />\n\n                    When I'm not staring at my computer, you can find \n                    me drinking coffee, hanging out with my dogs, or doing the\n                    Downward Facing Dog. \n                    </span>\n                    \n                \n                    \n\n                </div>\n                <FontAwesomeIcon className=\"icon_right\" icon=\"slash\" size='6x' transform=\"shrink-3 left-5 up-2 rotate-25\"></FontAwesomeIcon>\n                <FontAwesomeIcon className=\"icon_right\" icon=\"greater-than\" transform=\"rotate-330 left-10 up-8 shrink-1\" size=\"8x\"></FontAwesomeIcon>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n    render() {\n        return (\n        <nav className=\"fill\">\n            <ul className=\"nav__menu\">\n                {/* <li><a href=\"#\">about me</a></li> */}\n                <li><a href=\"/contact\">contact</a></li>\n                <li><a href=\"/resume\">resume</a></li>\n                <li><a href=\"/projects\">projects</a></li>\n                \n                \n            </ul>\n            </nav>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Contact.css'\nimport emailjs from 'emailjs-com'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class Contact extends Component {\n    state = {\n        name: '',\n        email: '',\n        subject: '',\n        message: '',\n      }\n\n    sendEmail = (e) => {\n        e.preventDefault();\n        const { name, email, message } = this.state\n\n        let templateParams = {\n            from_name: name, \n            to_name: email,\n            message_html: message,\n        }\n        console.log(name)\n        console.log(email)\n        console.log(message)\n        emailjs.send('gmail', 'profile_template', templateParams, 'user_EvDSCV5c0YpwSjKoPcYon')\n        .then(function(response) {\n            console.log('SUCCESS!', response.status, response.text);\n        }, function(error) {\n            console.log('FAILED...', error);\n        });\n        this.resetForm()\n      }\n\n      resetForm() {\n          this.setState({\n              name: '',\n              email: '',\n              message: '',\n          })\n      }\n\n      handleChange = (param, e) => {\n        this.setState({ [param]: e.target.value })\n      }\n    \n    render() {\n        return (\n            <div className=\"form_controls\">\n                <h2 className=\"contact_header\">Get in Touch!</h2>\n                <form className=\"contact-form\" onSubmit={this.sendEmail.bind(this)}>\n                    <input className=\"input_form\" type=\"hidden\" name=\"contact_number\" />\n                    <label className=\"label_form\">Name:</label>\n                    <input className=\"input_form\" type=\"text\" onChange={this.handleChange.bind(this, 'name')} name=\"user_name\" value={this.state.name} />\n                    <label className=\"label_form\">Email:</label>\n                    <input className=\"input_form\" type=\"email\" value={this.state.email} onChange={this.handleChange.bind(this, 'email')} name=\"user_email\" />\n                    <label className=\"label_form\">Message:</label>\n                    <textarea className=\"text_area\" name=\"message\" value={this.state.message} onChange={this.handleChange.bind(this, 'message')}></textarea>\n                    <input className=\"send_button\" type=\"submit\" value=\"Send\" />\n                </form>\n                <ul className=\"contact_list\">\n                    <div className=\"\">\n                        <li><FontAwesomeIcon size=\"2x\" icon={['fab', 'github']} ></FontAwesomeIcon></li>\n                        <span>GitHub</span>\n                    </div>\n                    <div>\n                        <li><FontAwesomeIcon size=\"2x\" icon={['fab', \"linkedin-in\"]}></FontAwesomeIcon></li>\n                        <span>Linkedin</span>\n                    </div>\n                    <div>\n                        <li><FontAwesomeIcon size=\"2x\" icon=\"envelope-open-text\" ></FontAwesomeIcon></li>\n                        <span>Email</span>\n                    </div>\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Projects.css'\nimport { Route, Link } from 'react-router-dom';\n\nexport default class Projects extends Component {\n  render() {\n    return (\n      <div>\n          \n        <section className=\"project_1\">             \n          <img className=\"project1_sc\" alt=\"screenshot of Reppy, Set, GO!\" src=\"https://i.imgur.com/GGqr0qx.png\" width=\"500\" height=\"300\" />\n          <p className=\"project1_desc\"><h3 id=\"project_header\">Reppy, Set, GO!</h3> Full-stack fitness fitness app where users can create an\n          account and log in using JWT authentication, store their workout on specific date using a Postgres database, and a React client makes\n          requests to the RESTful API. \n          <div id=\"project_stack\">Stack: Javascript, React, Node, Express, PostgreSQL, CSS.</div>\n          <div id=\"live_link\">\n          <a target=\"_blank\" href=\"http://reppysetgo.herokuapp.com\">Live App</a> {' '}\n          <span className=\"github_link\" ><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.github.com/jennifrmarie/reppysetgo\">GitHub</a></span>\n          </div>\n          </p>\n          <img className=\"project1_sc\" alt=\"screenshot of Reppy, Set, GO!\" src=\"https://i.imgur.com/cR2yQ30.png\" width=\"500\" height=\"300\" />   \n        </section>\n        <section className=\"project_2\">\n          <img className=\"project2_sc\" src=\"https://i.imgur.com/H42JHVk.png\" alt=\"screenshot of QuarenTV\" width=\"500\" height=\"300\" />\n          <p className=\"project2_desc\"><h3 id=\"project_header\">QuarenTV</h3>Full-stack app using JWT authentication for login, users can make list\n          of what they want to watch which is then stored into a PostgreSQL database and can earn points and badges for checking items off of the list.\n          React client utilizes a RESTful API to make requests\n          <div id=\"project_stack\">Stack: Javascript, React, Node, Express, PostgreSQL, CSS.</div>\n          <div id=\"live_link\">\n          <a rel=\"noopener noreferrer\" href=\"http://quarentv.herokuapp.com\" target=\"_blank\">Live App</a>{' '}\n          <span className=\"github_link\" ><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.github.com/jennifrmarie/quarentv-client\">GitHub</a></span>\n          </div>\n          </p>\n          <img className=\"project2_sc\" src=\"https://i.imgur.com/F95BN3z.png\" alt=\"screenshot of QuarenTV\" width=\"500\" height=\"300\" />\n        </section>\n        <section className=\"project_3\">\n          <img className=\"project3_sc\" src=\"https://i.imgur.com/W69BAuI.png\" width=\"500\" height=\"300\" alt=\"screenshot of Holy Macro!\" />\n          <p className=\"project3_desc\"><h3 id=\"project_header\">Holy Macro!</h3>Created an app that allows user to input macronutrients and then uses asynchronous programming with promises to send JSON data with recipes based on their search parameters.\n          <div id=\"project_stack\">Stack: JavascriptES6, jQuery, CSS3, HTML5.</div>\n          <div id=\"live_link\">\n          <a rel=\"noopener noreferrer\" href=\"https://jennifrmarie.github.io/HolyMacro/\" target=\"_blank\">Live App</a>\n          <span className=\"github_link\" ><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/jennifrmarie/HolyMacro.git\">GitHub</a></span>\n          </div>\n          </p>\n          <img className=\"project3_sc\" src=\"https://i.imgur.com/6oOZQkJ.png\" width=\"500\" height=\"300\" alt=\"screenshot of Holy Macro!\" />\n        </section>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './Resume.css'\n\nexport default class Resume extends Component {\n    render() {\n        return (\n            <section className='resume'>\n               <img className=\"resume_img\" src=\"https://i.imgur.com/m9cXAqv.png\" alt=\"resume\" width=\"375\" height=\"600\" />\n            </section>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Intro from './Intro'\nimport NavBar from './NavBar'\nimport Contact from './Contact'\nimport Projects from './Projects'\nimport Resume from './Resume'\nimport { Route } from 'react-router-dom';\n\nexport default class App extends React.Component {\n  renderNavRoutes() {\n    return (\n      <>\n      <Route\n        path=\"/projects\" \n        component={Projects}\n      />\n      <Route\n        exact path='/'\n        component={Intro}\n      />\n      <Route\n        path='/resume'\n        component={Resume}\n      />\n      <Route\n        path='/contact'\n        component={Contact}\n      />\n      </>\n    )\n  }\n  render() {\n    return (\n      <div className=\"App__main\">\n        <NavBar />\n        {this.renderNavRoutes()}\n      </div>\n    )\n  }\n}\n\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport {\n  faEllipsisH, faAngleLeft, faChevronRight, faEnvelopeOpenText, faGreaterThan, faLessThan, faAngleRight, faSlash, faArrowLeft, faArrowRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { BrowserRouter } from 'react-router-dom';\nlibrary.add(fab, faEllipsisH, faChevronRight, faEnvelopeOpenText , faGreaterThan, faLessThan, faAngleLeft, faSlash, faAngleRight, faArrowLeft, faArrowRight)\n\nReactDOM.render(\n  <BrowserRouter basename={window.location.pathname || ''}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n"],"sourceRoot":""}